{"remainingRequest":"D:\\dashboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dashboard\\src\\components\\Diagram.vue?vue&type=style&index=0&id=5a4d34a7&lang=scss&scoped=true&","dependencies":[{"path":"D:\\dashboard\\src\\components\\Diagram.vue","mtime":1537957843336},{"path":"D:\\dashboard\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"D:\\dashboard\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\dashboard\\node_modules\\postcss-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\dashboard\\node_modules\\sass-loader\\lib\\loader.js","mtime":1533139052000},{"path":"D:\\dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1537776599066},{"path":"D:\\dashboard\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"../static/main.scss\";\n",{"version":3,"sources":["Diagram.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA","file":"Diagram.vue","sourceRoot":"src\\components","sourcesContent":["<template>\r\n  <div class=\"chart\">\r\n  <div class=\"xAxis\">\r\n  </div>\r\n  <div class=\"diagram\">\r\n    <div class=\"matrixPlan\" :style=\"{width: matrixPlanWidth}\">Matrix Plan</div>\r\n    <div class=\"total\" :style=\"{width: totalWidth}\">Total</div>\r\n    <div class=\"tRow\">\r\n      <div class=\"matrixFact\" :style=\"{width: matrixFactWidth}\">matrixFact</div>\r\n      <div class=\"actual\" :style=\"{width: actualWidth}\">actual</div>\r\n      <div class=\"oop\" :style=\"{width: oopWidth}\">oop</div>\r\n    </div>\r\n  </div>\r\n</div>\r\n</template>\r\n<script>\r\nexport default {\r\n  props:['matrixPlan', 'total', 'matrixFact', 'actual', 'oop', 'totalWidth'],\r\n\r\n  computed: {\r\n    matrixPlanWidth(){\r\n      const matrixPlanWidth = 800* (this.matrixPlan / this.total);\r\n      return String(matrixPlanWidth) + 'px';\r\n    },\r\n    matrixFactWidth(){\r\n      const matrixFactWidth = 800*(this.matrixFact / this.total);\r\n      return String(matrixFactWidth) + 'px';\r\n    },\r\n    actualWidth(){\r\n      const actualWidth = 800 *(this.actual / this.total);\r\n      return String(actualWidth) + 'px';\r\n    },\r\n    oopWidth(){\r\n      const oopWidth = 800*(this.oop / this.total);\r\n      return String(oopWidth) + 'px';\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n  @import \"../static/main.scss\";\r\n</style>\r\n"]}]}