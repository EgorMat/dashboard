{"remainingRequest":"D:\\dashboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dashboard\\src\\components\\ChartWindow.vue?vue&type=style&index=0&id=c328cf24&lang=scss&scoped=true&","dependencies":[{"path":"D:\\dashboard\\src\\components\\ChartWindow.vue","mtime":1545848145796},{"path":"D:\\dashboard\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"D:\\dashboard\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\dashboard\\node_modules\\postcss-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\dashboard\\node_modules\\sass-loader\\lib\\loader.js","mtime":1533139052000},{"path":"D:\\dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1537776599066},{"path":"D:\\dashboard\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n@import \"../static/main.scss\";\r\n",{"version":3,"sources":["ChartWindow.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA","file":"ChartWindow.vue","sourceRoot":"src\\components","sourcesContent":["<!-- <div class=\"chart-window\"> -->\r\n<canvas class=\"canvas\">\r\n</canvas>\r\n<!-- <div> -->\r\n\r\n<script>\r\nimport VueCharts from 'vue-chartjs'\r\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\r\nimport {Bar,HorizontalBar, mixins} from 'vue-chartjs'\r\n\r\nexport default {\r\n  extends: HorizontalBar,\r\n  mixins: [mixins.reactiveProp],\r\n  props: ['chartData'],\r\n  data(){\r\n    return {\r\n      options:{\r\n        plugins: {\r\n          datalabels: {\r\n            color: '#2E3D5',\r\n            font:{size: 16, family: 'Roboto, sans-serif'},\r\n            formatter: function(value, context) {\r\n              console.log(context.chart.data.datasets[context.datasetIndex].data[context.dataIndex])\r\n              if(context.chart.data.datasets[context.datasetIndex].data[context.dataIndex] == 0){\r\n                return '';\r\n              }\r\n              else {\r\n                       return context.chart.data.datasets[context.datasetIndex].label;\r\n                     }\r\n            }\r\n       }\r\n       },\r\n\r\n        // scaleShowVerticalLines: false,\r\n        scales: {\r\n            yAxes: [{\r\n                ticks: {\r\n                    beginAtZero:true,\r\n                    mirror: true\r\n\r\n          },\r\n                stacked: true,\r\n            }],\r\n            xAxes: [{\r\n              stacked: true,\r\n            }]\r\n        },\r\n        responsive: false,\r\n        maintainAspectRatio: false,\r\n},\r\n    }\r\n  },\r\n  mounted() {\r\n      this.addPlugin(ChartDataLabels);\r\n    this.renderChart(this.chartData, this.options)\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../static/main.scss\";\r\n</style>\r\n"]}]}