{"remainingRequest":"D:\\dashboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dashboard\\src\\components\\Diagrams.vue?vue&type=style&index=0&id=79a58f81&lang=scss&scoped=true&","dependencies":[{"path":"D:\\dashboard\\src\\components\\Diagrams.vue","mtime":1545852848497},{"path":"D:\\dashboard\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"D:\\dashboard\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\dashboard\\node_modules\\postcss-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\dashboard\\node_modules\\sass-loader\\lib\\loader.js","mtime":1533139052000},{"path":"D:\\dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1537776599066},{"path":"D:\\dashboard\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"../static/main.scss\";\n\n.charts{\n  position: absolute;\n  top: 50px;\n  width: 100%;\n  height: 900px;\n  background: grey;\n}\n\n.line{\n  padding: 10px;\n  margin-top: 30px;\n  position: absolute;\n  background: white;\n  border-radius: 15px;\n  margin-left: 7%;\n}\n\n\n.stock{\n  margin-top: 50px;\n  position: absolute;\n  margin-left: 7%;\n  top: 480px;\n  background: white;\n  border-radius: 15px;\n}\n\n.ytd {\n  padding: 10px;\n  margin-top: 30px;\n  position: absolute;\n  margin-left: 60%;\n  background: white;\n  border-radius: 15px;\n}\n\n.chartLabel{\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  width: 100%;\n}\n\n.chartLabel>div{\n  padding: 16px;\n  font-family: 'Roboto', sans-serif;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  font-size: 23px;\n  color: #646B71;\n}\n\n.ytd>.chartLabel>div>p{\n  width: 380px;\n  text-align: center;\n}\n\n.chartLabel>select{\n  height: 80%;\n}\n\n",{"version":3,"sources":["Diagrams.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6RA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Diagrams.vue","sourceRoot":"src\\components","sourcesContent":["<template>\r\n  <div class=\"charts\">\r\n  <div class=\"line\">\r\n  <div class=\"chartLabel\">\r\n    <div>\r\n      График продаж\r\n    </div>\r\n  <select v-model=\"selected\">\r\n  <option value=\"sun\">Солнцезащитные</option>\r\n  <option value=\"optical\">Оптика</option>\r\n  <option value=\"all\">Суммарно</option>\r\n</select>\r\n</div>\r\n    <LineChartWindow v-if=\"loaded\" :chart-data=\"lineData\" :width=\"width*0.5\" :height=\"400\"/>\r\n  </div>\r\n  <div class=\"stock\">\r\n    <div class=\"chartLabel\">\r\n      <div>\r\n    Actual stock\r\n    </div>\r\n    </div>\r\n    <chart-window :chart-data=\"chartData\"  class=\"chart-window\" :width=\"width* 0.85\" :height=\"300\" />\r\n</div>\r\n  <div class=\"ytd\">\r\n    <div class=\"chartLabel\">\r\n      <div>\r\n        <p>\r\n    YTD\r\n  </p>\r\n  </div>\r\n  </div>\r\n    <YTDChart v-if=\"loaded\" :chart-data=\"YTDData\" :width=\"width * 0.25\" :height=\"331\"/>\r\n  </div>\r\n</div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport Navigation from './Navigation.vue';\r\nimport ChartWindow from './ChartWindow.vue';\r\nimport YTDChart from './YTDChart.vue'\r\nimport LineChartWindow from './LineChartWindow.vue'\r\nimport Diagram from './Diagram.vue';\r\n\r\n\r\nexport default {\r\n  components: {\r\n    LineChartWindow,\r\n    YTDChart,\r\n    'chart-window' : ChartWindow,\r\n    'diagram' : Diagram\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      width: screen.width,\r\n      loaded: false,\r\n      selected: 'sun',\r\n      lineData: null,\r\n      YTDData: null,\r\n      datestart: \"2018-08-08\",\r\n      dateend: \"2018-08-20\",\r\n      // chartData: null,\r\n      // totalWidth: null,\r\n      // matrixPlan: null,\r\n      // total: null,\r\n      // matrixFact: null,\r\n      // actual: null,\r\n      // oop: null,\r\n\r\n\r\n\r\n      chartData:{\r\n             labels: [,,,],\r\n             datasets: [\r\n              {\r\n               type: 'horizontalBar',\r\n                label: \"Matrix plan\",\r\n                backgroundColor: 'rgba(130, 161, 248, 0.84)',\r\n                data: [600,'','']\r\n              },\r\n\r\n              {\r\n                type: 'horizontalBar',\r\n                label: \"Total\",\r\n                backgroundColor: 'rgba(0, 0, 0, 1)',\r\n                borderColor: 'rgba(0, 0, 0, 1)',\r\n                data: ['',700,'']\r\n              },\r\n              {\r\n                type: 'horizontalBar',\r\n                label: \"Matrix fact\",\r\n                backgroundColor: 'rgba(133, 229, 82, 0.84)',\r\n                data: ['','', 899]\r\n              },\r\n              {\r\n                type: 'horizontalBar',\r\n                label: \"Actual\",\r\n                backgroundColor: 'rgba(0, 72, 173, 0.84)',\r\n                data: ['','',500]\r\n              },\r\n              { type: 'horizontalBar',\r\n                label: \"OOP\",\r\n                backgroundColor: 'rgba(240, 200, 0, 0.84)',\r\n                data: ['', '',700]\r\n              },        ]\r\n\r\n    }\r\n  }\r\n},\r\n\r\n  methods: {\r\n    getLineData(){\r\n      axios({\r\n        method: \"get\",\r\n        url: \"https://luxb.news-mts.ru/api/v1/diagram/sales\"+\"?type=\" + this.selected+ \"&company=0\",\r\n        headers: {\r\n          'X-Token' : this.$cookie.get('token')\r\n        }\r\n      }).then((resp) => {\r\n        let data = resp.data.years;\r\n        console.log(data)\r\n        let data_0 = [];\r\n        let data_1 = [];\r\n        let data_2 = [];\r\n        for(let i=0; i<=data[0].points.length-1; i++){\r\n          data_0.push({ x: data[0].points[i].week, y: data[0].points[i].value})\r\n        }\r\n        for(let i=0; i<=data[1].points.length-1; i++){\r\n          data_1.push({ x: data[1].points[i].week, y: data[1].points[i].value})\r\n        }\r\n        for(let i=0; i<=data[2].points.length-1; i++){\r\n          data_2.push({ x: data[1].points[i].week, y: data[1].points[i].value})\r\n        }\r\n        console.log(data_0);\r\n      this.lineData =   {\r\n         labels: [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52],\r\n         datasets: [\r\n           {\r\n            label: data[0].year,\r\n             fill: false,\r\n             pointRadius: 0,\r\n             borderColor:  '#45E6B0',\r\n             data  : data_0\r\n           },{\r\n             label: data[1].year,\r\n             fill: false,\r\n             pointRadius: 0,\r\n             borderColor:  '#32CCFE',\r\n             data: data_1\r\n           },\r\n           {\r\n             label: data[2].year,\r\n             fill: false,\r\n             pointRadius: 0,\r\n             borderColor: '#000000',\r\n             borderDash:[1,5],\r\n             data: data_2\r\n           }\r\n         ]\r\n       }\r\n     })\r\n   },\r\n\r\n      getYTDData(){\r\n        axios({\r\n          method: \"get\",\r\n          url: \"https://luxb.news-mts.ru/api/v1/diagram/ytd\",\r\n          headers: {\r\n            'X-Token' : this.$cookie.get('token')\r\n          }\r\n        }).then((resp) => {\r\n          let data_0 = [resp.data.current_year.week, resp.data.current_year.month, resp.data.current_year.quarter];\r\n          let data_1 = [resp.data.last_year.week, resp.data.last_year.month, resp.data.last_year.quarter];\r\n          let data_2 = [];\r\n        this.YTDData =   {\r\n            labels: ['неделя', 'месяц', 'квартал'],\r\n              datasets: [\r\n                {\r\n                  label: '2018',\r\n                  backgroundColor: '#45E6B0',\r\n                  data: data_0\r\n                },{\r\n                  label: '2017',\r\n                  backgroundColor: '#32CCFE',\r\n                  data: data_1\r\n                },\r\n                {\r\n                  label: 'План 2018',\r\n                  backgroundColor: '#C4C4C4',\r\n                  data: data_2\r\n                }\r\n              ]\r\n            },\r\n          console.log(resp.data)\r\n        });\r\n        },\r\n\r\n\r\n\r\n\r\n\r\n    recountData(e){\r\n      e.preventDefault();\r\n      axios.post('http://lux.news-mts/reinit');\r\n    },\r\n    fetchData() {\r\n      // e.preventDefault();\r\n      axios.post('http://lux.news-mts.ru/actualstock', {\r\n          datestart: this.datestart,\r\n          dateend: this.dateend,\r\n          headers: {\r\n'X-token': this.$cookie.get('token')\r\n        },\r\n        })\r\n        .then((response) => {\r\n            // this.chartData = response.data;\r\n            // this.totalWidth = String(800) + 'px';\r\n            // this.matrixFact = response.data.matrix_fact;\r\n            // this.matrixPlan = response.data.matrix_plan;\r\n            // this.total  = response.data.matrix_fact + response.data.actual + response.data.oop;\r\n            // this.actual = response.data.actual;\r\n            // this.oop = response.data.oop;\r\n            this.chartData = {\r\n                   labels: [' ', ' ', ' '],\r\n                   datasets: [\r\n                    {\r\n                     type: 'horizontalBar',\r\n                      label: \"Matrix plan\",\r\n                      backgroundColor: 'rgba(130, 161, 248, 0.84)',\r\n                      data: [response.data.matrix_plan,0,0]\r\n                    },\r\n\r\n                    {\r\n                      type: 'horizontalBar',\r\n                      label: \"Total\",\r\n                      backgroundColor: 'rgba(0, 0, 0, 1)',\r\n                      borderColor: 'rgba(0, 0, 0, 1)',\r\n                      data: [0,response.data.stock_qty_sum,0]\r\n                    },\r\n                    {\r\n                      type: 'horizontalBar',\r\n                      label: \"Matrix fact\",\r\n                      backgroundColor: 'rgba(133, 229, 82, 0.84)',\r\n                      data: [0,0, response.data.matrix_fact]\r\n                    },\r\n                    {\r\n                      type: 'horizontalBar',\r\n                      label: \"Actual\",\r\n                      backgroundColor: 'rgba(0, 72, 173, 0.84)',\r\n                      data: [0,0,response.data.actual_not_in_plan]\r\n                    },\r\n                    { type: 'horizontalBar',\r\n                      label: \"oop\",\r\n                      backgroundColor: 'rgba(240, 200, 0, 0.84)',\r\n                      data: [0, 0, response.data.oop]\r\n                    },        ]\r\n\r\n          }}\r\n        )\r\n        .catch(function(error) {\r\n          console.log(error)\r\n        })\r\n    },\r\n  },\r\n  mounted(){\r\n    console.log(this.width)\r\n    this.loaded = false;\r\n    this.$store.dispatch('changeIsTable', false)\r\n    this.getLineData();\r\n    this.getYTDData();\r\n    this.loaded =true;\r\n  },\r\n  watch: {\r\n    selected(){\r\n      this.loaded = false;\r\n      this.getLineData();\r\n      this.loaded = true;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  @import \"../static/main.scss\";\r\n\r\n  .charts{\r\n    position: absolute;\r\n    top: 50px;\r\n    width: 100%;\r\n    height: 900px;\r\n    background: grey;\r\n  }\r\n\r\n  .line{\r\n    padding: 10px;\r\n    margin-top: 30px;\r\n    position: absolute;\r\n    background: white;\r\n    border-radius: 15px;\r\n    margin-left: 7%;\r\n  }\r\n\r\n\r\n  .stock{\r\n    margin-top: 50px;\r\n    position: absolute;\r\n    margin-left: 7%;\r\n    top: 480px;\r\n    background: white;\r\n    border-radius: 15px;\r\n  }\r\n\r\n  .ytd {\r\n    padding: 10px;\r\n    margin-top: 30px;\r\n    position: absolute;\r\n    margin-left: 60%;\r\n    background: white;\r\n    border-radius: 15px;\r\n  }\r\n\r\n  .chartLabel{\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    width: 100%;\r\n  }\r\n\r\n  .chartLabel>div{\r\n    padding: 16px;\r\n    font-family: 'Roboto', sans-serif;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    line-height: normal;\r\n    font-size: 23px;\r\n    color: #646B71;\r\n  }\r\n\r\n  .ytd>.chartLabel>div>p{\r\n    width: 380px;\r\n    text-align: center;\r\n  }\r\n\r\n  .chartLabel>select{\r\n    height: 80%;\r\n  }\r\n\r\n</style>\r\n"]}]}