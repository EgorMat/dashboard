{"remainingRequest":"D:\\dashboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dashboard\\src\\components\\Dashboard.vue?vue&type=style&index=0&id=27bf494e&lang=scss&scoped=true&","dependencies":[{"path":"D:\\dashboard\\src\\components\\Dashboard.vue","mtime":1537957711675},{"path":"D:\\dashboard\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"D:\\dashboard\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\dashboard\\node_modules\\postcss-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\dashboard\\node_modules\\sass-loader\\lib\\loader.js","mtime":1533139052000},{"path":"D:\\dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1537776599066},{"path":"D:\\dashboard\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"../static/main.scss\";\n",{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+GA","file":"Dashboard.vue","sourceRoot":"src\\components","sourcesContent":["<template>\n<div class=\"dashboard\">\n  <div class=\"navbar\">\n  <div class=\"chartData\">{{chartData}}</div>\n  <form class=\"form\">\n    <label>Выбрать период\n    <input v-model=\"datestart\" type=\"date\" required>\n    <input v-model=\"dateend\" type=\"date\" required>\n    <button class=\"button\" @click=\"fetchData\">Получить данные</button>\n  </label>\n  </form>\n</div>\n  <diagram\n    :totalWidth=\"totalWidth\"\n    :matrixPlan=\"matrixPlan\"\n    :total=\"total\"\n    :matrixFact=\"matrixFact\"\n    :actual=\"actual\"\n    :oop=\"oop\"\n          />\n  <!-- <div class=\"charts\">\n          <chart-window :chartData=\"chartData\" :options=\"options\" class=\"chart-window\"/>\n  </div> -->\n</div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport ChartWindow from './ChartWindow.vue';\nimport Diagram from './Diagram.vue';\n\n\nexport default {\n  components: {\n    'chart-window' : ChartWindow,\n    'diagram' : Diagram\n  },\n\n  data() {\n    return {\n      datestart: \"2018-08-08\",\n      dateend: \"2018-08-20\",\n      chartData: null,\n      totalWidth: null,\n      matrixPlan: null,\n      total: null,\n      matrixFact: null,\n      actual: null,\n      oop: null,\n\n//       options:{\n//         // scaleShowVerticalLines: false,\n//\n//         layout: {\n//             padding: {\n//                 left: 50,\n//                 right: 0,\n//                 top: 150,\n//                 bottom: 0\n//             }\n//           },\n//         scales: {\n//             yAxes: [{\n//                 ticks: {\n//                     // beginAtZero:true\n//                 },\n//                 stacked: true,\n//             }],\n//             xAxes: [{\n//               beginAtZero: true,\n//               stacked: true,\n//             }]\n//         },\n//         responsive: false,\n//         maintainAspectRatio: false,\n// },\n//\n//       chartData:{}\n//\n//\n//     }\n}\n  },\n\n  methods: {\n    fetchData(e) {\n      e.preventDefault();\n      axios.post('http://lux.news-mts.ru/actualstock', {\n          datestart: this.datestart,\n          dateend: this.dateend,\n        })\n        .then((response) => {\n            this.chartData = response.data;\n            this.totalWidth = String(800) + 'px';\n            this.matrixFact = response.data.matrix_fact;\n            this.matrixPlan = response.data.matrix_plan;\n            this.total  = response.data.matrix_fact + response.data.actual + response.data.oop;\n            this.actual = response.data.actual;\n            this.oop = response.data.oop;\n          }\n        )\n        .catch(function(error) {\n          console.log(error)\n        })\n    }\n  }\n\n}\n</script>\n\n<style lang=\"scss\" scoped>\n  @import \"../static/main.scss\";\n</style>\n\n\n\n<!-- // this.chartData = {\n//        labels: [' ', ' ', ' '],\n//        datasets: [\n//          {\n//               type: 'line',\n//               label: 'Dataset 2',\n//                backgroundColor: 'red',\n//               data: [0,0,2000]\n// },\n//         {\n//           type: 'horizontalBar',\n//           label: \"Matrix plan\",\n//           backgroundColor: 'rgba(130, 161, 248, 0.84)',\n//           data: [response.data.matrix_plan,0,0]\n//         },\n//\n//         {\n//           type: 'horizontalBar',\n//           label: \"Total\",\n//           backgroundColor: 'rgba(0, 0, 0, 1)',\n//           borderColor: 'rgba(0, 0, 0, 1)',\n//           data: [0,response.data.matrix_fact + response.data.actual + response.data.oop,0]\n//         },\n//         {\n//           type: 'horizontalBar',\n//           label: \"Matrix fact\",\n//           backgroundColor: 'rgba(133, 229, 82, 0.84)',\n//           data: [0,0, response.data.matrix_fact]\n//         },\n//         {\n//           type: 'horizontalBar',\n//           label: \"Actual\",\n//           backgroundColor: 'rgba(0, 72, 173, 0.84)',\n//           data: [0,0,response.data.actual]\n//         },\n//         { type: 'horizontalBar',\n//           label: \"oop\",\n//           backgroundColor: 'rgba(240, 200, 0, 0.84)',\n//           data: [0, 0, response.data.oop]\n//         },\n//        ] -->\n"]}]}