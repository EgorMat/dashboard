{"remainingRequest":"D:\\dashboard\\node_modules\\thread-loader\\dist\\cjs.js!D:\\dashboard\\node_modules\\babel-loader\\lib\\index.js!D:\\dashboard\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\dashboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dashboard\\src\\components\\Diagrams.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\dashboard\\src\\components\\Diagrams.vue","mtime":1545852848497},{"path":"D:\\dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1537776599066},{"path":"D:\\dashboard\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\dashboard\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1537776599066},{"path":"D:\\dashboard\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nimport Navigation from './Navigation.vue';\nimport ChartWindow from './ChartWindow.vue';\nimport YTDChart from './YTDChart.vue';\nimport LineChartWindow from './LineChartWindow.vue';\nimport Diagram from './Diagram.vue';\nexport default {\n  components: {\n    LineChartWindow: LineChartWindow,\n    YTDChart: YTDChart,\n    'chart-window': ChartWindow,\n    'diagram': Diagram\n  },\n  data: function data() {\n    return {\n      width: screen.width,\n      loaded: false,\n      selected: 'sun',\n      lineData: null,\n      YTDData: null,\n      datestart: \"2018-08-08\",\n      dateend: \"2018-08-20\",\n      // chartData: null,\n      // totalWidth: null,\n      // matrixPlan: null,\n      // total: null,\n      // matrixFact: null,\n      // actual: null,\n      // oop: null,\n      chartData: {\n        labels: [,,,],\n        datasets: [{\n          type: 'horizontalBar',\n          label: \"Matrix plan\",\n          backgroundColor: 'rgba(130, 161, 248, 0.84)',\n          data: [600, '', '']\n        }, {\n          type: 'horizontalBar',\n          label: \"Total\",\n          backgroundColor: 'rgba(0, 0, 0, 1)',\n          borderColor: 'rgba(0, 0, 0, 1)',\n          data: ['', 700, '']\n        }, {\n          type: 'horizontalBar',\n          label: \"Matrix fact\",\n          backgroundColor: 'rgba(133, 229, 82, 0.84)',\n          data: ['', '', 899]\n        }, {\n          type: 'horizontalBar',\n          label: \"Actual\",\n          backgroundColor: 'rgba(0, 72, 173, 0.84)',\n          data: ['', '', 500]\n        }, {\n          type: 'horizontalBar',\n          label: \"OOP\",\n          backgroundColor: 'rgba(240, 200, 0, 0.84)',\n          data: ['', '', 700]\n        }]\n      }\n    };\n  },\n  methods: {\n    getLineData: function getLineData() {\n      var _this = this;\n\n      axios({\n        method: \"get\",\n        url: \"https://luxb.news-mts.ru/api/v1/diagram/sales\" + \"?type=\" + this.selected + \"&company=0\",\n        headers: {\n          'X-Token': this.$cookie.get('token')\n        }\n      }).then(function (resp) {\n        var data = resp.data.years;\n        console.log(data);\n        var data_0 = [];\n        var data_1 = [];\n        var data_2 = [];\n\n        for (var i = 0; i <= data[0].points.length - 1; i++) {\n          data_0.push({\n            x: data[0].points[i].week,\n            y: data[0].points[i].value\n          });\n        }\n\n        for (var _i = 0; _i <= data[1].points.length - 1; _i++) {\n          data_1.push({\n            x: data[1].points[_i].week,\n            y: data[1].points[_i].value\n          });\n        }\n\n        for (var _i2 = 0; _i2 <= data[2].points.length - 1; _i2++) {\n          data_2.push({\n            x: data[1].points[_i2].week,\n            y: data[1].points[_i2].value\n          });\n        }\n\n        console.log(data_0);\n        _this.lineData = {\n          labels: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52],\n          datasets: [{\n            label: data[0].year,\n            fill: false,\n            pointRadius: 0,\n            borderColor: '#45E6B0',\n            data: data_0\n          }, {\n            label: data[1].year,\n            fill: false,\n            pointRadius: 0,\n            borderColor: '#32CCFE',\n            data: data_1\n          }, {\n            label: data[2].year,\n            fill: false,\n            pointRadius: 0,\n            borderColor: '#000000',\n            borderDash: [1, 5],\n            data: data_2\n          }]\n        };\n      });\n    },\n    getYTDData: function getYTDData() {\n      var _this2 = this;\n\n      axios({\n        method: \"get\",\n        url: \"https://luxb.news-mts.ru/api/v1/diagram/ytd\",\n        headers: {\n          'X-Token': this.$cookie.get('token')\n        }\n      }).then(function (resp) {\n        var data_0 = [resp.data.current_year.week, resp.data.current_year.month, resp.data.current_year.quarter];\n        var data_1 = [resp.data.last_year.week, resp.data.last_year.month, resp.data.last_year.quarter];\n        var data_2 = [];\n        _this2.YTDData = {\n          labels: ['неделя', 'месяц', 'квартал'],\n          datasets: [{\n            label: '2018',\n            backgroundColor: '#45E6B0',\n            data: data_0\n          }, {\n            label: '2017',\n            backgroundColor: '#32CCFE',\n            data: data_1\n          }, {\n            label: 'План 2018',\n            backgroundColor: '#C4C4C4',\n            data: data_2\n          }]\n        }, console.log(resp.data);\n      });\n    },\n    recountData: function recountData(e) {\n      e.preventDefault();\n      axios.post('http://lux.news-mts/reinit');\n    },\n    fetchData: function fetchData() {\n      var _this3 = this;\n\n      // e.preventDefault();\n      axios.post('http://lux.news-mts.ru/actualstock', {\n        datestart: this.datestart,\n        dateend: this.dateend,\n        headers: {\n          'X-token': this.$cookie.get('token')\n        }\n      }).then(function (response) {\n        // this.chartData = response.data;\n        // this.totalWidth = String(800) + 'px';\n        // this.matrixFact = response.data.matrix_fact;\n        // this.matrixPlan = response.data.matrix_plan;\n        // this.total  = response.data.matrix_fact + response.data.actual + response.data.oop;\n        // this.actual = response.data.actual;\n        // this.oop = response.data.oop;\n        _this3.chartData = {\n          labels: [' ', ' ', ' '],\n          datasets: [{\n            type: 'horizontalBar',\n            label: \"Matrix plan\",\n            backgroundColor: 'rgba(130, 161, 248, 0.84)',\n            data: [response.data.matrix_plan, 0, 0]\n          }, {\n            type: 'horizontalBar',\n            label: \"Total\",\n            backgroundColor: 'rgba(0, 0, 0, 1)',\n            borderColor: 'rgba(0, 0, 0, 1)',\n            data: [0, response.data.stock_qty_sum, 0]\n          }, {\n            type: 'horizontalBar',\n            label: \"Matrix fact\",\n            backgroundColor: 'rgba(133, 229, 82, 0.84)',\n            data: [0, 0, response.data.matrix_fact]\n          }, {\n            type: 'horizontalBar',\n            label: \"Actual\",\n            backgroundColor: 'rgba(0, 72, 173, 0.84)',\n            data: [0, 0, response.data.actual_not_in_plan]\n          }, {\n            type: 'horizontalBar',\n            label: \"oop\",\n            backgroundColor: 'rgba(240, 200, 0, 0.84)',\n            data: [0, 0, response.data.oop]\n          }]\n        };\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  },\n  mounted: function mounted() {\n    console.log(this.width);\n    this.loaded = false;\n    this.$store.dispatch('changeIsTable', false);\n    this.getLineData();\n    this.getYTDData();\n    this.loaded = true;\n  },\n  watch: {\n    selected: function selected() {\n      this.loaded = false;\n      this.getLineData();\n      this.loaded = true;\n    }\n  }\n};",{"version":3,"sources":["Diagrams.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,UAAA,MAAA,kBAAA;AACA,OAAA,WAAA,MAAA,mBAAA;AACA,OAAA,QAAA,MAAA,gBAAA;AACA,OAAA,eAAA,MAAA,uBAAA;AACA,OAAA,OAAA,MAAA,eAAA;AAGA,eAAA;AACA,cAAA;AACA,oCADA;AAEA,sBAFA;AAGA,oBAAA,WAHA;AAIA,eAAA;AAJA,GADA;AAQA,MARA,kBAQA;AACA,WAAA;AACA,aAAA,OAAA,KADA;AAEA,cAAA,KAFA;AAGA,gBAAA,KAHA;AAIA,gBAAA,IAJA;AAKA,eAAA,IALA;AAMA,iBAAA,YANA;AAOA,eAAA,YAPA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,iBAAA;AACA,gBAAA,KADA;AAEA,kBAAA,CACA;AACA,gBAAA,eADA;AAEA,iBAAA,aAFA;AAGA,2BAAA,2BAHA;AAIA,gBAAA,CAAA,GAAA,EAAA,EAAA,EAAA,EAAA;AAJA,SADA,EAQA;AACA,gBAAA,eADA;AAEA,iBAAA,OAFA;AAGA,2BAAA,kBAHA;AAIA,uBAAA,kBAJA;AAKA,gBAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA;AALA,SARA,EAeA;AACA,gBAAA,eADA;AAEA,iBAAA,aAFA;AAGA,2BAAA,0BAHA;AAIA,gBAAA,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA;AAJA,SAfA,EAqBA;AACA,gBAAA,eADA;AAEA,iBAAA,QAFA;AAGA,2BAAA,wBAHA;AAIA,gBAAA,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA;AAJA,SArBA,EA2BA;AAAA,gBAAA,eAAA;AACA,iBAAA,KADA;AAEA,2BAAA,yBAFA;AAGA,gBAAA,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA;AAHA,SA3BA;AAFA;AAlBA,KAAA;AAuDA,GAhEA;AAkEA,WAAA;AACA,eADA,yBACA;AAAA;;AACA,YAAA;AACA,gBAAA,KADA;AAEA,aAAA,kDAAA,QAAA,GAAA,KAAA,QAAA,GAAA,YAFA;AAGA,iBAAA;AACA,qBAAA,KAAA,OAAA,CAAA,GAAA,CAAA,OAAA;AADA;AAHA,OAAA,EAMA,IANA,CAMA,UAAA,IAAA,EAAA;AACA,YAAA,OAAA,KAAA,IAAA,CAAA,KAAA;AACA,gBAAA,GAAA,CAAA,IAAA;AACA,YAAA,SAAA,EAAA;AACA,YAAA,SAAA,EAAA;AACA,YAAA,SAAA,EAAA;;AACA,aAAA,IAAA,IAAA,CAAA,EAAA,KAAA,KAAA,CAAA,EAAA,MAAA,CAAA,MAAA,GAAA,CAAA,EAAA,GAAA,EAAA;AACA,iBAAA,IAAA,CAAA;AAAA,eAAA,KAAA,CAAA,EAAA,MAAA,CAAA,CAAA,EAAA,IAAA;AAAA,eAAA,KAAA,CAAA,EAAA,MAAA,CAAA,CAAA,EAAA;AAAA,WAAA;AACA;;AACA,aAAA,IAAA,KAAA,CAAA,EAAA,MAAA,KAAA,CAAA,EAAA,MAAA,CAAA,MAAA,GAAA,CAAA,EAAA,IAAA,EAAA;AACA,iBAAA,IAAA,CAAA;AAAA,eAAA,KAAA,CAAA,EAAA,MAAA,CAAA,EAAA,EAAA,IAAA;AAAA,eAAA,KAAA,CAAA,EAAA,MAAA,CAAA,EAAA,EAAA;AAAA,WAAA;AACA;;AACA,aAAA,IAAA,MAAA,CAAA,EAAA,OAAA,KAAA,CAAA,EAAA,MAAA,CAAA,MAAA,GAAA,CAAA,EAAA,KAAA,EAAA;AACA,iBAAA,IAAA,CAAA;AAAA,eAAA,KAAA,CAAA,EAAA,MAAA,CAAA,GAAA,EAAA,IAAA;AAAA,eAAA,KAAA,CAAA,EAAA,MAAA,CAAA,GAAA,EAAA;AAAA,WAAA;AACA;;AACA,gBAAA,GAAA,CAAA,MAAA;AACA,cAAA,QAAA,GAAA;AACA,koBAAA,CACA;AACA,mBAAA,KAAA,CAAA,EAAA,IADA;AAEA,kBAAA,KAFA;AAGA,yBAAA,CAHA;AAIA,yBAAA,SAJA;AAKA,kBAAA;AALA,WADA,EAOA;AACA,mBAAA,KAAA,CAAA,EAAA,IADA;AAEA,kBAAA,KAFA;AAGA,yBAAA,CAHA;AAIA,yBAAA,SAJA;AAKA,kBAAA;AALA,WAPA,EAcA;AACA,mBAAA,KAAA,CAAA,EAAA,IADA;AAEA,kBAAA,KAFA;AAGA,yBAAA,CAHA;AAIA,yBAAA,SAJA;AAKA,wBAAA,CAAA,CAAA,EAAA,CAAA,CALA;AAMA,kBAAA;AANA,WAdA;AAFA,SAAA;AA0BA,OAhDA;AAiDA,KAnDA;AAqDA,cArDA,wBAqDA;AAAA;;AACA,YAAA;AACA,gBAAA,KADA;AAEA,aAAA,6CAFA;AAGA,iBAAA;AACA,qBAAA,KAAA,OAAA,CAAA,GAAA,CAAA,OAAA;AADA;AAHA,OAAA,EAMA,IANA,CAMA,UAAA,IAAA,EAAA;AACA,YAAA,SAAA,CAAA,KAAA,IAAA,CAAA,YAAA,CAAA,IAAA,EAAA,KAAA,IAAA,CAAA,YAAA,CAAA,KAAA,EAAA,KAAA,IAAA,CAAA,YAAA,CAAA,OAAA,CAAA;AACA,YAAA,SAAA,CAAA,KAAA,IAAA,CAAA,SAAA,CAAA,IAAA,EAAA,KAAA,IAAA,CAAA,SAAA,CAAA,KAAA,EAAA,KAAA,IAAA,CAAA,SAAA,CAAA,OAAA,CAAA;AACA,YAAA,SAAA,EAAA;AACA,eAAA,OAAA,GAAA;AACA,kBAAA,CAAA,QAAA,EAAA,OAAA,EAAA,SAAA,CADA;AAEA,oBAAA,CACA;AACA,mBAAA,MADA;AAEA,6BAAA,SAFA;AAGA,kBAAA;AAHA,WADA,EAKA;AACA,mBAAA,MADA;AAEA,6BAAA,SAFA;AAGA,kBAAA;AAHA,WALA,EAUA;AACA,mBAAA,WADA;AAEA,6BAAA,SAFA;AAGA,kBAAA;AAHA,WAVA;AAFA,SAAA,EAmBA,QAAA,GAAA,CAAA,KAAA,IAAA,CAnBA;AAoBA,OA9BA;AA+BA,KArFA;AA2FA,eA3FA,uBA2FA,CA3FA,EA2FA;AACA,QAAA,cAAA;AACA,YAAA,IAAA,CAAA,4BAAA;AACA,KA9FA;AA+FA,aA/FA,uBA+FA;AAAA;;AACA;AACA,YAAA,IAAA,CAAA,oCAAA,EAAA;AACA,mBAAA,KAAA,SADA;AAEA,iBAAA,KAAA,OAFA;AAGA,iBAAA;AACA,qBAAA,KAAA,OAAA,CAAA,GAAA,CAAA,OAAA;AADA;AAHA,OAAA,EAOA,IAPA,CAOA,UAAA,QAAA,EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAA,SAAA,GAAA;AACA,kBAAA,CAAA,GAAA,EAAA,GAAA,EAAA,GAAA,CADA;AAEA,oBAAA,CACA;AACA,kBAAA,eADA;AAEA,mBAAA,aAFA;AAGA,6BAAA,2BAHA;AAIA,kBAAA,CAAA,SAAA,IAAA,CAAA,WAAA,EAAA,CAAA,EAAA,CAAA;AAJA,WADA,EAQA;AACA,kBAAA,eADA;AAEA,mBAAA,OAFA;AAGA,6BAAA,kBAHA;AAIA,yBAAA,kBAJA;AAKA,kBAAA,CAAA,CAAA,EAAA,SAAA,IAAA,CAAA,aAAA,EAAA,CAAA;AALA,WARA,EAeA;AACA,kBAAA,eADA;AAEA,mBAAA,aAFA;AAGA,6BAAA,0BAHA;AAIA,kBAAA,CAAA,CAAA,EAAA,CAAA,EAAA,SAAA,IAAA,CAAA,WAAA;AAJA,WAfA,EAqBA;AACA,kBAAA,eADA;AAEA,mBAAA,QAFA;AAGA,6BAAA,wBAHA;AAIA,kBAAA,CAAA,CAAA,EAAA,CAAA,EAAA,SAAA,IAAA,CAAA,kBAAA;AAJA,WArBA,EA2BA;AAAA,kBAAA,eAAA;AACA,mBAAA,KADA;AAEA,6BAAA,yBAFA;AAGA,kBAAA,CAAA,CAAA,EAAA,CAAA,EAAA,SAAA,IAAA,CAAA,GAAA;AAHA,WA3BA;AAFA,SAAA;AAmCA,OAlDA,EAoDA,KApDA,CAoDA,UAAA,KAAA,EAAA;AACA,gBAAA,GAAA,CAAA,KAAA;AACA,OAtDA;AAuDA;AAxJA,GAlEA;AA4NA,SA5NA,qBA4NA;AACA,YAAA,GAAA,CAAA,KAAA,KAAA;AACA,SAAA,MAAA,GAAA,KAAA;AACA,SAAA,MAAA,CAAA,QAAA,CAAA,eAAA,EAAA,KAAA;AACA,SAAA,WAAA;AACA,SAAA,UAAA;AACA,SAAA,MAAA,GAAA,IAAA;AACA,GAnOA;AAoOA,SAAA;AACA,YADA,sBACA;AACA,WAAA,MAAA,GAAA,KAAA;AACA,WAAA,WAAA;AACA,WAAA,MAAA,GAAA,IAAA;AACA;AALA;AApOA,CAAA","sourcesContent":["<template>\r\n  <div class=\"charts\">\r\n  <div class=\"line\">\r\n  <div class=\"chartLabel\">\r\n    <div>\r\n      График продаж\r\n    </div>\r\n  <select v-model=\"selected\">\r\n  <option value=\"sun\">Солнцезащитные</option>\r\n  <option value=\"optical\">Оптика</option>\r\n  <option value=\"all\">Суммарно</option>\r\n</select>\r\n</div>\r\n    <LineChartWindow v-if=\"loaded\" :chart-data=\"lineData\" :width=\"width*0.5\" :height=\"400\"/>\r\n  </div>\r\n  <div class=\"stock\">\r\n    <div class=\"chartLabel\">\r\n      <div>\r\n    Actual stock\r\n    </div>\r\n    </div>\r\n    <chart-window :chart-data=\"chartData\"  class=\"chart-window\" :width=\"width* 0.85\" :height=\"300\" />\r\n</div>\r\n  <div class=\"ytd\">\r\n    <div class=\"chartLabel\">\r\n      <div>\r\n        <p>\r\n    YTD\r\n  </p>\r\n  </div>\r\n  </div>\r\n    <YTDChart v-if=\"loaded\" :chart-data=\"YTDData\" :width=\"width * 0.25\" :height=\"331\"/>\r\n  </div>\r\n</div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport Navigation from './Navigation.vue';\r\nimport ChartWindow from './ChartWindow.vue';\r\nimport YTDChart from './YTDChart.vue'\r\nimport LineChartWindow from './LineChartWindow.vue'\r\nimport Diagram from './Diagram.vue';\r\n\r\n\r\nexport default {\r\n  components: {\r\n    LineChartWindow,\r\n    YTDChart,\r\n    'chart-window' : ChartWindow,\r\n    'diagram' : Diagram\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      width: screen.width,\r\n      loaded: false,\r\n      selected: 'sun',\r\n      lineData: null,\r\n      YTDData: null,\r\n      datestart: \"2018-08-08\",\r\n      dateend: \"2018-08-20\",\r\n      // chartData: null,\r\n      // totalWidth: null,\r\n      // matrixPlan: null,\r\n      // total: null,\r\n      // matrixFact: null,\r\n      // actual: null,\r\n      // oop: null,\r\n\r\n\r\n\r\n      chartData:{\r\n             labels: [,,,],\r\n             datasets: [\r\n              {\r\n               type: 'horizontalBar',\r\n                label: \"Matrix plan\",\r\n                backgroundColor: 'rgba(130, 161, 248, 0.84)',\r\n                data: [600,'','']\r\n              },\r\n\r\n              {\r\n                type: 'horizontalBar',\r\n                label: \"Total\",\r\n                backgroundColor: 'rgba(0, 0, 0, 1)',\r\n                borderColor: 'rgba(0, 0, 0, 1)',\r\n                data: ['',700,'']\r\n              },\r\n              {\r\n                type: 'horizontalBar',\r\n                label: \"Matrix fact\",\r\n                backgroundColor: 'rgba(133, 229, 82, 0.84)',\r\n                data: ['','', 899]\r\n              },\r\n              {\r\n                type: 'horizontalBar',\r\n                label: \"Actual\",\r\n                backgroundColor: 'rgba(0, 72, 173, 0.84)',\r\n                data: ['','',500]\r\n              },\r\n              { type: 'horizontalBar',\r\n                label: \"OOP\",\r\n                backgroundColor: 'rgba(240, 200, 0, 0.84)',\r\n                data: ['', '',700]\r\n              },        ]\r\n\r\n    }\r\n  }\r\n},\r\n\r\n  methods: {\r\n    getLineData(){\r\n      axios({\r\n        method: \"get\",\r\n        url: \"https://luxb.news-mts.ru/api/v1/diagram/sales\"+\"?type=\" + this.selected+ \"&company=0\",\r\n        headers: {\r\n          'X-Token' : this.$cookie.get('token')\r\n        }\r\n      }).then((resp) => {\r\n        let data = resp.data.years;\r\n        console.log(data)\r\n        let data_0 = [];\r\n        let data_1 = [];\r\n        let data_2 = [];\r\n        for(let i=0; i<=data[0].points.length-1; i++){\r\n          data_0.push({ x: data[0].points[i].week, y: data[0].points[i].value})\r\n        }\r\n        for(let i=0; i<=data[1].points.length-1; i++){\r\n          data_1.push({ x: data[1].points[i].week, y: data[1].points[i].value})\r\n        }\r\n        for(let i=0; i<=data[2].points.length-1; i++){\r\n          data_2.push({ x: data[1].points[i].week, y: data[1].points[i].value})\r\n        }\r\n        console.log(data_0);\r\n      this.lineData =   {\r\n         labels: [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52],\r\n         datasets: [\r\n           {\r\n            label: data[0].year,\r\n             fill: false,\r\n             pointRadius: 0,\r\n             borderColor:  '#45E6B0',\r\n             data  : data_0\r\n           },{\r\n             label: data[1].year,\r\n             fill: false,\r\n             pointRadius: 0,\r\n             borderColor:  '#32CCFE',\r\n             data: data_1\r\n           },\r\n           {\r\n             label: data[2].year,\r\n             fill: false,\r\n             pointRadius: 0,\r\n             borderColor: '#000000',\r\n             borderDash:[1,5],\r\n             data: data_2\r\n           }\r\n         ]\r\n       }\r\n     })\r\n   },\r\n\r\n      getYTDData(){\r\n        axios({\r\n          method: \"get\",\r\n          url: \"https://luxb.news-mts.ru/api/v1/diagram/ytd\",\r\n          headers: {\r\n            'X-Token' : this.$cookie.get('token')\r\n          }\r\n        }).then((resp) => {\r\n          let data_0 = [resp.data.current_year.week, resp.data.current_year.month, resp.data.current_year.quarter];\r\n          let data_1 = [resp.data.last_year.week, resp.data.last_year.month, resp.data.last_year.quarter];\r\n          let data_2 = [];\r\n        this.YTDData =   {\r\n            labels: ['неделя', 'месяц', 'квартал'],\r\n              datasets: [\r\n                {\r\n                  label: '2018',\r\n                  backgroundColor: '#45E6B0',\r\n                  data: data_0\r\n                },{\r\n                  label: '2017',\r\n                  backgroundColor: '#32CCFE',\r\n                  data: data_1\r\n                },\r\n                {\r\n                  label: 'План 2018',\r\n                  backgroundColor: '#C4C4C4',\r\n                  data: data_2\r\n                }\r\n              ]\r\n            },\r\n          console.log(resp.data)\r\n        });\r\n        },\r\n\r\n\r\n\r\n\r\n\r\n    recountData(e){\r\n      e.preventDefault();\r\n      axios.post('http://lux.news-mts/reinit');\r\n    },\r\n    fetchData() {\r\n      // e.preventDefault();\r\n      axios.post('http://lux.news-mts.ru/actualstock', {\r\n          datestart: this.datestart,\r\n          dateend: this.dateend,\r\n          headers: {\r\n'X-token': this.$cookie.get('token')\r\n        },\r\n        })\r\n        .then((response) => {\r\n            // this.chartData = response.data;\r\n            // this.totalWidth = String(800) + 'px';\r\n            // this.matrixFact = response.data.matrix_fact;\r\n            // this.matrixPlan = response.data.matrix_plan;\r\n            // this.total  = response.data.matrix_fact + response.data.actual + response.data.oop;\r\n            // this.actual = response.data.actual;\r\n            // this.oop = response.data.oop;\r\n            this.chartData = {\r\n                   labels: [' ', ' ', ' '],\r\n                   datasets: [\r\n                    {\r\n                     type: 'horizontalBar',\r\n                      label: \"Matrix plan\",\r\n                      backgroundColor: 'rgba(130, 161, 248, 0.84)',\r\n                      data: [response.data.matrix_plan,0,0]\r\n                    },\r\n\r\n                    {\r\n                      type: 'horizontalBar',\r\n                      label: \"Total\",\r\n                      backgroundColor: 'rgba(0, 0, 0, 1)',\r\n                      borderColor: 'rgba(0, 0, 0, 1)',\r\n                      data: [0,response.data.stock_qty_sum,0]\r\n                    },\r\n                    {\r\n                      type: 'horizontalBar',\r\n                      label: \"Matrix fact\",\r\n                      backgroundColor: 'rgba(133, 229, 82, 0.84)',\r\n                      data: [0,0, response.data.matrix_fact]\r\n                    },\r\n                    {\r\n                      type: 'horizontalBar',\r\n                      label: \"Actual\",\r\n                      backgroundColor: 'rgba(0, 72, 173, 0.84)',\r\n                      data: [0,0,response.data.actual_not_in_plan]\r\n                    },\r\n                    { type: 'horizontalBar',\r\n                      label: \"oop\",\r\n                      backgroundColor: 'rgba(240, 200, 0, 0.84)',\r\n                      data: [0, 0, response.data.oop]\r\n                    },        ]\r\n\r\n          }}\r\n        )\r\n        .catch(function(error) {\r\n          console.log(error)\r\n        })\r\n    },\r\n  },\r\n  mounted(){\r\n    console.log(this.width)\r\n    this.loaded = false;\r\n    this.$store.dispatch('changeIsTable', false)\r\n    this.getLineData();\r\n    this.getYTDData();\r\n    this.loaded =true;\r\n  },\r\n  watch: {\r\n    selected(){\r\n      this.loaded = false;\r\n      this.getLineData();\r\n      this.loaded = true;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  @import \"../static/main.scss\";\r\n\r\n  .charts{\r\n    position: absolute;\r\n    top: 50px;\r\n    width: 100%;\r\n    height: 900px;\r\n    background: grey;\r\n  }\r\n\r\n  .line{\r\n    padding: 10px;\r\n    margin-top: 30px;\r\n    position: absolute;\r\n    background: white;\r\n    border-radius: 15px;\r\n    margin-left: 7%;\r\n  }\r\n\r\n\r\n  .stock{\r\n    margin-top: 50px;\r\n    position: absolute;\r\n    margin-left: 7%;\r\n    top: 480px;\r\n    background: white;\r\n    border-radius: 15px;\r\n  }\r\n\r\n  .ytd {\r\n    padding: 10px;\r\n    margin-top: 30px;\r\n    position: absolute;\r\n    margin-left: 60%;\r\n    background: white;\r\n    border-radius: 15px;\r\n  }\r\n\r\n  .chartLabel{\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    width: 100%;\r\n  }\r\n\r\n  .chartLabel>div{\r\n    padding: 16px;\r\n    font-family: 'Roboto', sans-serif;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    line-height: normal;\r\n    font-size: 23px;\r\n    color: #646B71;\r\n  }\r\n\r\n  .ytd>.chartLabel>div>p{\r\n    width: 380px;\r\n    text-align: center;\r\n  }\r\n\r\n  .chartLabel>select{\r\n    height: 80%;\r\n  }\r\n\r\n</style>\r\n"],"sourceRoot":"src\\components"}]}