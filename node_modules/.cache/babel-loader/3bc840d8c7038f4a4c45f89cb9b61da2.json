{"remainingRequest":"D:\\dashboard\\node_modules\\thread-loader\\dist\\cjs.js!D:\\dashboard\\node_modules\\babel-loader\\lib\\index.js!D:\\dashboard\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\dashboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dashboard\\src\\components\\ChartWindow.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\dashboard\\src\\components\\ChartWindow.vue","mtime":1545848169002},{"path":"D:\\dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1537776599066},{"path":"D:\\dashboard\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\dashboard\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1537776599066},{"path":"D:\\dashboard\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\nimport VueCharts from 'vue-chartjs';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport { Bar, HorizontalBar, mixins } from 'vue-chartjs';\nexport default {\n  extends: HorizontalBar,\n  mixins: [mixins.reactiveProp],\n  props: ['chartData'],\n  data: function data() {\n    return {\n      options: {\n        plugins: {\n          datalabels: {\n            color: '#2E3D54',\n            font: {\n              size: 16,\n              family: 'Roboto, sans-serif'\n            },\n            formatter: function formatter(value, context) {\n              console.log(context.chart.data.datasets[context.datasetIndex].data[context.dataIndex]);\n\n              if (context.chart.data.datasets[context.datasetIndex].data[context.dataIndex] == 0) {\n                return '';\n              } else {\n                return context.chart.data.datasets[context.datasetIndex].label;\n              }\n            }\n          }\n        },\n        // scaleShowVerticalLines: false,\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true,\n              mirror: true\n            },\n            stacked: true\n          }],\n          xAxes: [{\n            stacked: true\n          }]\n        },\n        responsive: false,\n        maintainAspectRatio: false\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.addPlugin(ChartDataLabels);\n    this.renderChart(this.chartData, this.options);\n  }\n};",{"version":3,"sources":["ChartWindow.vue"],"names":[],"mappings":";;;;;AAMA,OAAA,SAAA,MAAA,aAAA;AACA,OAAA,eAAA,MAAA,2BAAA;AACA,SAAA,GAAA,EAAA,aAAA,EAAA,MAAA,QAAA,aAAA;AAEA,eAAA;AACA,WAAA,aADA;AAEA,UAAA,CAAA,OAAA,YAAA,CAFA;AAGA,SAAA,CAAA,WAAA,CAHA;AAIA,MAJA,kBAIA;AACA,WAAA;AACA,eAAA;AACA,iBAAA;AACA,sBAAA;AACA,mBAAA,SADA;AAEA,kBAAA;AAAA,oBAAA,EAAA;AAAA,sBAAA;AAAA,aAFA;AAGA,uBAAA,mBAAA,KAAA,EAAA,OAAA,EAAA;AACA,sBAAA,GAAA,CAAA,QAAA,KAAA,CAAA,IAAA,CAAA,QAAA,CAAA,QAAA,YAAA,EAAA,IAAA,CAAA,QAAA,SAAA,CAAA;;AACA,kBAAA,QAAA,KAAA,CAAA,IAAA,CAAA,QAAA,CAAA,QAAA,YAAA,EAAA,IAAA,CAAA,QAAA,SAAA,KAAA,CAAA,EAAA;AACA,uBAAA,EAAA;AACA,eAFA,MAGA;AACA,uBAAA,QAAA,KAAA,CAAA,IAAA,CAAA,QAAA,CAAA,QAAA,YAAA,EAAA,KAAA;AACA;AACA;AAXA;AADA,SADA;AAiBA;AACA,gBAAA;AACA,iBAAA,CAAA;AACA,mBAAA;AACA,2BAAA,IADA;AAEA,sBAAA;AAFA,aADA;AAMA,qBAAA;AANA,WAAA,CADA;AASA,iBAAA,CAAA;AACA,qBAAA;AADA,WAAA;AATA,SAlBA;AA+BA,oBAAA,KA/BA;AAgCA,6BAAA;AAhCA;AADA,KAAA;AAoCA,GAzCA;AA0CA,SA1CA,qBA0CA;AACA,SAAA,SAAA,CAAA,eAAA;AACA,SAAA,WAAA,CAAA,KAAA,SAAA,EAAA,KAAA,OAAA;AACA;AA7CA,CAAA","sourcesContent":["<!-- <div class=\"chart-window\"> -->\r\n<canvas class=\"canvas\">\r\n</canvas>\r\n<!-- <div> -->\r\n\r\n<script>\r\nimport VueCharts from 'vue-chartjs'\r\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\r\nimport {Bar,HorizontalBar, mixins} from 'vue-chartjs'\r\n\r\nexport default {\r\n  extends: HorizontalBar,\r\n  mixins: [mixins.reactiveProp],\r\n  props: ['chartData'],\r\n  data(){\r\n    return {\r\n      options:{\r\n        plugins: {\r\n          datalabels: {\r\n            color: '#2E3D54',\r\n            font:{size: 16, family: 'Roboto, sans-serif'},\r\n            formatter: function(value, context) {\r\n              console.log(context.chart.data.datasets[context.datasetIndex].data[context.dataIndex])\r\n              if(context.chart.data.datasets[context.datasetIndex].data[context.dataIndex] == 0){\r\n                return '';\r\n              }\r\n              else {\r\n                       return context.chart.data.datasets[context.datasetIndex].label;\r\n                     }\r\n            }\r\n       }\r\n       },\r\n\r\n        // scaleShowVerticalLines: false,\r\n        scales: {\r\n            yAxes: [{\r\n                ticks: {\r\n                    beginAtZero:true,\r\n                    mirror: true\r\n\r\n          },\r\n                stacked: true,\r\n            }],\r\n            xAxes: [{\r\n              stacked: true,\r\n            }]\r\n        },\r\n        responsive: false,\r\n        maintainAspectRatio: false,\r\n},\r\n    }\r\n  },\r\n  mounted() {\r\n      this.addPlugin(ChartDataLabels);\r\n    this.renderChart(this.chartData, this.options)\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../static/main.scss\";\r\n</style>\r\n"],"sourceRoot":"src\\components"}]}