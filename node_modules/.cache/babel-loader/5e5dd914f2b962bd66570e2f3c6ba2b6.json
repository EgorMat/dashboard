{"remainingRequest":"D:\\dashboard\\node_modules\\babel-loader\\lib\\index.js!D:\\dashboard\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\dashboard\\src\\store\\index.js","dependencies":[{"path":"D:\\dashboard\\src\\store\\index.js","mtime":1545763026507},{"path":"D:\\dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1537776599066},{"path":"D:\\dashboard\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\dashboard\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nVue.use(Vuex);\nvar store = new Vuex.Store({\n  state: {\n    date: {\n      currentYear: null,\n      lastYear: null\n    },\n    lineChartData: {\n      labels: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52],\n      datasets: [{\n        label: '',\n        fill: false,\n        // pointRadius: 0,\n        borderColor: '#45E6B0',\n        data: [// {x: 2, y:40},{x: 5, y:80},{x: 8, y:90},{x: 12, y:47},{x: 22, y:4}\n        ]\n      }, {\n        label: '',\n        fill: false,\n        // pointRadius: 0,\n        borderColor: '#32CCFE',\n        data: [// {x: 5, y:20},{x: 17, y:8},{x: 37, y:56},{x: 47, y:77},{x: 52, y:48}\n        ]\n      }, {\n        label: '',\n        fill: false,\n        // pointRadius: 0,\n        borderColor: '#000000',\n        borderDash: [1, 5],\n        data: [// {x: 4, y:40},{x: 6, y:80},{x: 8, y:90},{x: 17, y:47},{x: 32, y:4}\n        ]\n      }]\n    },\n    nav: ['Данные о продажах'],\n    user: {\n      token: ''\n    },\n    isTable: false\n  },\n  mutations: {\n    // resp.data = datasets\n    SET_LINE_DATA: function SET_LINE_DATA(state, data) {\n      for (var i = 0; i <= data.years.length - 1; i++) {\n        state.lineChartData.datasets[i].label = data.years[i].year;\n        state.lineChartData.datasets[i].data = [];\n\n        for (var k = 0; k <= data.years[i].points.length - 1; k++) {\n          state.lineChartData.datasets[i].data.push({\n            x: data.years[i].points[k].week,\n            y: data.years[i].points[k].value\n          });\n        }\n      }\n    },\n    CHANGE_IS_TABLE: function CHANGE_IS_TABLE(state, bool) {\n      state.isTable = bool;\n    },\n    ADD_NAV_ITEM: function ADD_NAV_ITEM(state, item) {\n      state.nav.push(item);\n    },\n    REMOVE_NAV_ITEM: function REMOVE_NAV_ITEM(state) {\n      state.nav.pop(); // if (i == 0) {\n      //   state.nav.splice(0, 2)\n      // }\n      // if (i == 1){\n      //   state.nav.splice(1, 1)\n      // }\n    },\n    SET_TOKEN: function SET_TOKEN(state, token) {\n      state.user.token = token;\n    },\n    SET_DATE: function SET_DATE(state, date) {\n      state.date.currentYear = date.current_year[0].toString();\n      state.date.lastYear = date.last_year[0].toString();\n    }\n  },\n  getters: {\n    getIsTable: function getIsTable(state) {\n      return state.isTable;\n    },\n    getNav: function getNav(state) {\n      return state.nav;\n    },\n    getToken: function getToken(state) {\n      return state.user.token;\n    },\n    getDate: function getDate(state) {\n      return state.date;\n    },\n    getLineChartData: function getLineChartData(state) {\n      return state.lineChartData;\n    }\n  },\n  actions: {\n    setLineData: function setLineData(_ref, type) {\n      var commit = _ref.commit;\n      axios({\n        method: \"get\",\n        url: \"https://luxb.news-mts.ru/api/v1/diagram/sales\" + \"?type=\" + type + \"&company=0\",\n        headers: {\n          'X-Token': 'ba8c2a64576b4f0fb2cd206f959dabd9'\n        }\n      }).then(function (resp) {\n        console.log(type);\n        console.log(resp.data);\n        commit('SET_LINE_DATA', resp.data);\n      });\n    },\n    changeIsTable: function changeIsTable(_ref2, bool) {\n      var commit = _ref2.commit;\n      commit('CHANGE_IS_TABLE', bool);\n    },\n    addNavItem: function addNavItem(_ref3, item) {\n      var commit = _ref3.commit;\n      commit('ADD_NAV_ITEM', item);\n    },\n    removeNavItem: function removeNavItem(_ref4, item) {\n      var commit = _ref4.commit;\n      commit('REMOVE_NAV_ITEM', item);\n    },\n    setToken: function setToken(_ref5, token) {\n      var commit = _ref5.commit;\n      commit('SET_TOKEN', token);\n    },\n    setDate: function setDate(_ref6, date) {\n      var commit = _ref6.commit;\n      commit('SET_DATE', date);\n    }\n  }\n});\nexport default store;",{"version":3,"sources":["D:\\dashboard\\src\\store\\index.js"],"names":["Vue","Vuex","axios","use","store","Store","state","date","currentYear","lastYear","lineChartData","labels","datasets","label","fill","borderColor","data","borderDash","nav","user","token","isTable","mutations","SET_LINE_DATA","i","years","length","year","k","points","push","x","week","y","value","CHANGE_IS_TABLE","bool","ADD_NAV_ITEM","item","REMOVE_NAV_ITEM","pop","SET_TOKEN","SET_DATE","current_year","toString","last_year","getters","getIsTable","getNav","getToken","getDate","getLineChartData","actions","setLineData","type","commit","method","url","headers","then","resp","console","log","changeIsTable","addNavItem","removeNavItem","setToken","setDate"],"mappings":"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","sourcesContent":["import  Vue from 'vue';\r\nimport Vuex from 'vuex';\r\nimport axios from 'axios'\r\n\r\n\r\nVue.use(Vuex);\r\n const store =  new Vuex.Store({\r\n   state: {\r\n     date: {\r\n       currentYear: null,\r\n       lastYear: null,\r\n     },\r\n     lineChartData: {\r\n       labels: [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52],\r\n       datasets: [\r\n         {\r\n           label: '',\r\n           fill: false,\r\n           // pointRadius: 0,\r\n           borderColor:  '#45E6B0',\r\n           data: [\r\n             // {x: 2, y:40},{x: 5, y:80},{x: 8, y:90},{x: 12, y:47},{x: 22, y:4}\r\n           ]\r\n         },{\r\n           label: '',\r\n           fill: false,\r\n           // pointRadius: 0,\r\n           borderColor:  '#32CCFE',\r\n           data: [\r\n             // {x: 5, y:20},{x: 17, y:8},{x: 37, y:56},{x: 47, y:77},{x: 52, y:48}\r\n           ]\r\n         },\r\n         {\r\n           label: '',\r\n           fill: false,\r\n           // pointRadius: 0,\r\n           borderColor: '#000000',\r\n           borderDash:[1,5],\r\n           data: [\r\n             // {x: 4, y:40},{x: 6, y:80},{x: 8, y:90},{x: 17, y:47},{x: 32, y:4}\r\n           ]\r\n         }\r\n       ]\r\n     },\r\n     nav : ['Данные о продажах'],\r\n     user: {\r\n       token: ''\r\n     },\r\n     isTable : false\r\n   },\r\n   mutations: {\r\n     // resp.data = datasets\r\n     SET_LINE_DATA(state, data){\r\n       for(let i=0;i<=data.years.length-1;i++){\r\n         state.lineChartData.datasets[i].label = data.years[i].year\r\n         state.lineChartData.datasets[i].data = [];\r\n         for (let k=0;k<=data.years[i].points.length-1; k++){\r\n           state.lineChartData.datasets[i].data.push({x: data.years[i].points[k].week, y:data.years[i].points[k].value})\r\n         }\r\n         }\r\n     },\r\n     CHANGE_IS_TABLE(state, bool){\r\n       state.isTable = bool;\r\n     },\r\n     ADD_NAV_ITEM(state,item){\r\n       state.nav.push(item)\r\n     },\r\n     REMOVE_NAV_ITEM(state){\r\n       state.nav.pop()\r\n       // if (i == 0) {\r\n       //   state.nav.splice(0, 2)\r\n       // }\r\n       // if (i == 1){\r\n       //   state.nav.splice(1, 1)\r\n       // }\r\n     },\r\n     SET_TOKEN(state, token){\r\n       state.user.token = token\r\n     },\r\n     SET_DATE(state, date){\r\n       state.date.currentYear = date.current_year[0].toString();\r\n       state.date.lastYear = date.last_year[0].toString();\r\n     }\r\n   },\r\n   getters: {\r\n     getIsTable(state){\r\n       return state.isTable;\r\n     },\r\n     getNav(state){\r\n       return state.nav\r\n     },\r\n     getToken(state){\r\n       return state.user.token\r\n     },\r\n     getDate(state){\r\n       return state.date\r\n     },\r\n     getLineChartData(state){\r\n       return state.lineChartData;\r\n     }\r\n   },\r\n   actions: {\r\n     setLineData({commit}, type){\r\n         axios({\r\n           method: \"get\",\r\n           url: \"https://luxb.news-mts.ru/api/v1/diagram/sales\"+\"?type=\" +type + \"&company=0\",\r\n           headers: {\r\n             'X-Token' : 'ba8c2a64576b4f0fb2cd206f959dabd9'\r\n           }\r\n         }).then((resp) => {\r\n           console.log(type)\r\n           console.log(resp.data)\r\n           commit('SET_LINE_DATA', resp.data)\r\n         })\r\n\r\n     },\r\n     changeIsTable({commit}, bool){\r\n       commit('CHANGE_IS_TABLE', bool);\r\n     },\r\n     addNavItem({commit},item){\r\n       commit('ADD_NAV_ITEM', item)\r\n     },\r\n     removeNavItem({commit},item){\r\n       commit('REMOVE_NAV_ITEM', item)\r\n     },\r\n     setToken({commit}, token){\r\n       commit('SET_TOKEN', token)\r\n     },\r\n     setDate({commit}, date){\r\n       commit('SET_DATE', date)\r\n     }\r\n   }\r\n})\r\n\r\n\r\nexport default store;\r\n"]}]}