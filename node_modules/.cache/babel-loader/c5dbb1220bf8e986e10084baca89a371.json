{"remainingRequest":"D:\\dashboard\\node_modules\\babel-loader\\lib\\index.js!D:\\dashboard\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\dashboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dashboard\\src\\components\\LineChartWindow.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\dashboard\\src\\components\\LineChartWindow.vue","mtime":1545777154234},{"path":"D:\\dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1537776599066},{"path":"D:\\dashboard\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1537776599066},{"path":"D:\\dashboard\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\nimport VueCharts from 'vue-chartjs';\nimport { Line, mixins } from 'vue-chartjs';\nimport axios from 'axios';\nexport default {\n  extends: Line,\n  mixins: [mixins.reactiveProp],\n  props: ['chartData', 'options', 'type'],\n  computed: {\n    data: function data() {\n      return this.$store.getters.getLineChartData;\n    }\n  },\n  mounted: function mounted() {\n    this.renderChart(this.chartData, this.options);\n  }\n};",{"version":3,"sources":["LineChartWindow.vue"],"names":[],"mappings":";;;;;;;AAQA,OAAA,SAAA,MAAA,aAAA;AAEA,SAAA,IAAA,EAAA,MAAA,QAAA,aAAA;AACA,OAAA,KAAA,MAAA,OAAA;AAEA,eAAA;AACA,WAAA,IADA;AAEA,UAAA,CAAA,OAAA,YAAA,CAFA;AAGA,SAAA,CAAA,WAAA,EAAA,SAAA,EAAA,MAAA,CAHA;AAIA,YAAA;AACA,QADA,kBACA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,gBAAA;AACA;AAHA,GAJA;AASA,SATA,qBASA;AACA,SAAA,WAAA,CAAA,KAAA,SAAA,EAAA,KAAA,OAAA;AACA;AAXA,CAAA","sourcesContent":["<!-- <template>\r\n  <div> -->\r\n<canvas class=\"canvas\">\r\n</canvas>\r\n<!-- </div>\r\n</template> -->\r\n\r\n<script>\r\nimport VueCharts from 'vue-chartjs'\r\n\r\nimport {Line, mixins} from 'vue-chartjs'\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  extends: Line,\r\n  mixins: [mixins.reactiveProp],\r\n  props: ['chartData', 'options','type'],\r\n  computed: {\r\n    data(){\r\n      return this.$store.getters.getLineChartData\r\n    }\r\n  },\r\n  mounted(){\r\n    this.renderChart(this.chartData, this.options);\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../static/main.scss\";\r\n#canvas {\r\n  position: absolute;\r\n  width: 10px;\r\n}\r\n</style>\r\n"],"sourceRoot":"src\\components"}]}